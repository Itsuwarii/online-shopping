// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"seig.com/onlineshoppingbackend/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/action",
				Handler: GetActionListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/action/:id",
				Handler: GetActionRequestHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/action/:id",
				Handler: CreateActionHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/action/:id",
				Handler: AddActionContentHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/action/:id",
				Handler: DeleteActionHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/order",
				Handler: CreateOrderHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/order/:id",
				Handler: GetOrderHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/order/:id",
				Handler: DeleteOrderHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/orders",
				Handler: GetOrdersHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPut,
				Path:    "/image",
				Handler: PutImageHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/image/:id",
				Handler: GetImageHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/refresh",
				Handler: RefreshHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/signin",
				Handler: LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/login"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/user",
				Handler: GetUserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user",
				Handler: PutUserInfoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/cart",
				Handler: GetCartHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/cart",
				Handler: UpdateProductToCartHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/cart",
				Handler: ClearCartHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/product",
				Handler: GetAllProductHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/product/:id",
				Handler: GetProductHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/product/:id",
				Handler: AddProductHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/product/:id",
				Handler: UpdateProductHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/product/:id",
				Handler: DeleteProductHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
