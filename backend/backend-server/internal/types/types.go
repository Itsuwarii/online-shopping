// Code generated by goctl. DO NOT EDIT.
package types

type ActionContentReq struct {
	ActionID  int64   `json:"Action_id"`
	StartTime int64 `json:"start_time"`
	EndTime   int64 `json:"end_time"`
}

type ActionContentResp struct {
	ActionID     int64       `json:"Action_id"`
	Content_List []Content `json:"content_list"`
}

type ActionCreateReq struct {
	MerchantId int64 `json:"merchant_id"`
}

type ActionCreateResp struct {
	ActionID int64 `json:"action_id"`
}

type ActionDeleteReq struct {
	ActionID int64 `json:"action_id"`
}

type ActionListResp struct {
	ActionIdList []int64 `json:"action_id_list"`
}

type ActionReq struct {
	ActionID int64 `json:"action_id"`
}

type ActionResp struct {
	ActionID   int64 `json:"action_id"`
	UserId     int64 `json:"user_id"`
	MerchantId int64 `json:"merchant_id"`
}

type ActionUpdateReq struct {
	ActionID int64     `json:"action_id"`
	Content  Content `json:"content"`
}

type Auth struct {
	Token        string `json:"token"`
	Expire       int64  `json:"expire"`
	RefreshAfter int64  `json:"refresh_after"`
}

type Cart struct {
	CartProductList []CartProduct `json:"cart_product_list"`
}

type CartProduct struct {
	ProductId int64   `json:"id"`
	Number    int64   `json:"number"`
	Date      int64   `json:"date`
}

type Content struct {
	OwnerId int64  `json:"owner"`
	Date    int64  `json:"date"`
	Text    string `json:"text"`
}

type DateScope struct {
	StartDate int64 `json:"start_date"`
	EndDate   int64 `json:"end_date"`
}

type DeleteProductReq struct {
	ID int64 `path:"id"`
}

type LoginReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResp struct {
	Id      int64  `json:"id"`
	Name    string `json:"name"`
	State   int64  `json:"state"`
	Message string `json:"message"`
	Auth    Auth   `json:"auth"`
}

type MerchantAuth struct {
	Token        string `json:"token"`
	Expire       int64  `json:"expire"`
	RefreshAfter int64  `json:"refresh_after"`
}

type MerchantDeleteReq struct {
}

type MerchantDeleteResp struct {
}

type MerchantInfoResp struct {
	Id            int64  `db:"Id"`
	Name          string `db:"Name"`
	AvatarLocator string `db:"AvatarLocator"`
	Licence       string `db:"Licence"`
	TelePhone     string `db:"TelePhone"`
	Intro         string `db:"Intro"`
	Date          int64  `db:"Date"`
}

type MerchantLoginReq struct {
	MarchantName string `json:"marchantName"`
	Password string `json:"password"`
}

type MerchantLoginResp struct {
	Id      int64        `json:"id"`
	Name    string       `json:"name"`
	State   int64        `json:"state"`
	Message string       `json:"message"`
	Auth    MerchantAuth `json:"auth"`
}

type MerchantNameAvailableReq struct {
	Name string `json:"name"`
}

type MerchantNameAvailableResp struct {
	State int64 `json:"state"`
}

type MerchantRegisterReq struct {
	Name      string `json:"name"`
	Password  string `json:"password"`
	TelePhone string `json:"telephone"`
	Licence   string `json:"lience"`
	Intro     string `json:"intro"`
}

type MerchantRegisterResp struct {
	State   int64        `json:"state"`
	Message string       `json:"message"`
	Auth    MerchantAuth `json:"auth"`
}

type MerchantUpdateInfoReq struct {
	Name          string `db:"Name"`
	AvatarLocator string `db:"AvatarLocator"`
	Licence       string `db:"Licence"`
	TelePhone     string `db:"TelePhone"`
	Intro         string `db:"Intro"`
}

type MerchantUpdateInfoResp struct {
}

type NameAvailableReq struct {
	Name string `json:"name"`
}

type NameAvailableResp struct {
	State int64 `json:"state"`
}

type NewOrder struct {
	UserId           int64            `json:"user_id"`
	Remark           string           `json:"remark"`
	ProductId        int64		      `json:"product_id"`
	Number 			 int64  		  `json:"number"`
}

type NewProduct struct {
	Name           string    `json:"name"`
	Price          float64   `json:"price"`
	AvatarLocator  string    `json:"avatar_locator"`
	ImagesLocator  string    `json:"images_locator"`
	Intro          string    `json:"intro"`
	State          int64     `json:"state"`
	Amount         int64     `json:"amount"`
}

type Order struct {
	UserId           int64            `json:"user_id"`
	MerchantId       int64            `json:"merchant_id"`
	Date             int64            `json:"date"`
	State            int64            `json:"state"`
	Remark           string           `json:"remark"`
	ProductId        int64		      `json:"product_id"`
	Number 			 int64  		  `json:"number"`
}

type OrderId struct {
	Id int64 `json:"id"`
}

type OrderList struct {
	OrdersList []Order `json:"orders_list"`
}

// type OrderProduct struct {
// 	ProductId int64     `json:"id"`
// 	Number    int64     `json:"number"`
// 	Price     float64   `json:"price"`
// 	Logistics string    `json:"logistics"`
// }

type Product struct {
	ID            int64       `json:"id"`
	Name          string      `json:"name"`
	MerchantId    int64       `json:"merchant"`
	AvatarLocator string      `json:"avatar_locator"`
	ImagesLocator string      `json:"images_locator"`
	Intro         string      `json:"intro"`
	Price         float64     `json:"price"`
	Amount        int64       `json:"amount"`
	State         int64       `json:"state"`
}

type ProductId struct {
	Id int64 `json:"id"`
}

type ProductListReq struct {
	Index int64 `json:"index"`
	Size  int64 `json:"size"`
}

type ProductListResp struct {
	ProductList []Product `json:"product_list"`
}

type RandomProductListResp struct {
	ProductList []Product `json:"product_list"`
}

type RegisterReq struct {
	Name      string `json:"name"`
	Password  string `json:"password"`
	Sex       int64  `json:"sex"`
	TelePhone string `json:"telephone"`
	Intro     string `json:"intro"`
}

type RegisterResp struct {
	State   int64  `json:"state"`
	Message string `json:"message"`
	Auth    Auth   `json:"auth"`
}

type UpdateProductReq struct {
	ID             int64      `path:"id"`
	Name           string     `json:"name"`
	Price          float64    `json:"price"`
	AvatarLocator  string     `json:"avatar_locator"`
	ImagesLocator  string   `json:"images_locator"`
	Intro          string     `json:"intro"`
	State          int64      `json:"state"`
	Amount         int64      `json:"amount"`
}

type UserDeleteReq struct {
}

type UserDeleteResp struct {
}

type UserInfoResp struct {
	Name            string   `json:"name"`
	AvatarLocator   string   `json:"avatar_locator"`
	Sex             int64    `json:"sex"`
	TelePhone       string   `json:"telephone"`
	Intro           string   `json:"intro"`
}

type UserInfoUpdateReq struct {
	Name      		string `json:"name"`
	AvatarLocator   string `json:"avatar_locator"`
	Sex      		int64  `json:"sex"`
	TelePhone		string `json:"telephone"`
	Intro    		string `json:"intro"`
}

type UserInfoUpdateResp struct {
	State   int64    `json:"state"`
	Message string   `json:"message"`
}

const (
	SUCCESS = 1
	FAILED  = 2
)

const(
	AVAILABLE = 1
	UNAVAILABLE = 2
)