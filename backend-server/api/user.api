syntax = "v1"

type Auth {
	Token        string `json:"token"`
	Expire       int64    `json:"expire"`
	RefreshAfter int64    `json:"refresh_after"`
}

// 用户登录
type (
	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	LoginResp {
		Id      int    `json:"id"`
		Name    string `json:"name"`
		State   int    `json:"state"`
		Message string `json:"message"`
		Auth    Auth   `json:"auth"`
	}
)

// 用户注册
type (
	NameAvailableReq {
		Name string `json:"name"`
	}

	NameAvailableResp {
		State int `json:"state"`
	}

	RegisterReq {
		Name      string `json:"name"`
		Password  string `json:"password"`
		Sex       int    `json:"sex"`
		TelePhone int    `json:"telephone"`
		Intro     string `json:"intro"`
	}

	RegisterResp {
		State   int    `json:"state"`
		Message string `json:"message"`
		Auth    Auth   `json:"auth"`
	}
)

// 用户登录注册
@server (
	prefix: /token
)
service mall-api {
	@handler LoginHandler
	post /signin (LoginReq) returns (LoginResp)

	@handler RegisterNameAvailableHandler
	get /register/checkname (NameAvailableReq) returns (NameAvailableResp)

	@handler RegisterHandler
	post /register (RegisterReq) returns (RegisterResp)
}

// 刷新令牌
@server (
	prefix: /token
	jwt: Auth
)
service mall-api {
	@handler RefreshHandler
	post /refresh returns (Auth)
}

// 用户存取自己的信息
type (
	UserInfoResp {
		Name      string `json:"name"`
		ImageId   string `json:"image_id"`
		Sex       int    `json:"sex"`
		TelePhone int    `json:"telephone"`
		Desc      string `json:"desc"`
	}

	UserInfoUpdateReq {
		Name      string `json:"name"`
		ImageId   string `json:"image_id"`
		Sex       int    `json:"sex"`
		TelePhone int    `json:"telephone"`
		Intro     string `json:"intro"`
	}

	UserInfoUpdateResp {
	}

	UserDeleteReq {
	}
	UserDeleteResp {
	}
)

@server (
	prefix: /user
	jwt: Auth
)
service mall-api {
	@handler UserInfoHandler
	get / returns (UserInfoResp)

	@handler UserInfoUpdateHandler
	post / (UserInfoUpdateReq) returns (UserInfoUpdateResp)

	@handler UserDeleteHandler
	delete / (UserDeleteReq) returns (UserDeleteResp)
}